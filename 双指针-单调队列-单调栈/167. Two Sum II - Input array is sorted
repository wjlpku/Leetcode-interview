/*
简单的双指针问题：
思路：暴力解法->是否存在单调性->根据单调性优化
167. Two Sum II - Input array is sorted
Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.
The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.

Note:
Your returned answers (both index1 and index2) are not zero-based.
You may assume that each input would have exactly one solution and you may not use the same element twice.
Example:

Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.
*/

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int n = numbers.size();
        int i, j;
        for(i=0, j=n-1; i<j; i++){
            while(numbers[i]+numbers[j] > target) j--;
            if((numbers[i]+numbers[j]) == target) break;
        }
        return {i+1, j+1};

    }
};
