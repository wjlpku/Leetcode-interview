/*
Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the libraryâ€™s sort function for this problem.
Could you come up with a one-pass algorithm using only constant space?
*/

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n0=-1, n1=-1, n2=-1;
        int n = nums.size();
        for (int i=0; i<n; i++){
            if (nums[i]==0){
                nums[++n2]=2;
                nums[++n1]=1;
                nums[++n0]=0;
            }else
            if (nums[i]==1){
                nums[++n2]=2;
                nums[++n1]=1;
            }else
            if (nums[i]==2){
                nums[++n2]=2;
            }
        }
    }
};
